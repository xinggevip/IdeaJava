<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.juzimi.mapper.UserlikesenMapper" >
  <resultMap id="BaseResultMap" type="com.juzimi.domain.Userlikesen" >
    <id column="user_likesen_id" property="userLikesenId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="sentence_id" property="sentenceId" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userlikesen
    where user_likesen_id = #{userLikesenId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserIdSenId" parameterType="com.juzimi.domain.Userlikesen" >
    DELETE FROM userlikesen WHERE userlikesen.user_id = #{userId} AND userlikesen.sentence_id = #{sentenceId}
  </delete>
  <insert id="insert" parameterType="com.juzimi.domain.Userlikesen" >
    /* 获取插入的最后一个id */
    <selectKey keyColumn="user_likesen_id" keyProperty="userLikesenId" resultType="Integer" order="AFTER">
      select last_insert_id()
    </selectKey>
    insert into userlikesen (user_id, sentence_id
      )
    values (#{userId,jdbcType=VARCHAR}, #{sentenceId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.juzimi.domain.Userlikesen" >
    update userlikesen
    set user_id = #{userId,jdbcType=VARCHAR},
      sentence_id = #{sentenceId,jdbcType=INTEGER}
    where user_likesen_id = #{userLikesenId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select user_likesen_id, user_id, sentence_id
    from userlikesen
    where user_likesen_id = #{userLikesenId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select user_likesen_id, user_id, sentence_id
    from userlikesen
  </select>
</mapper>